jenkins:
  systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code plugin"
  numExecutors: 0  # No executors on controller
  mode: EXCLUSIVE  # Only build on agents
  scmCheckoutRetryCount: 3

  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false

  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "${ADMIN_PASSWORD:-admin}"

  clouds:
    - kubernetes:
        name: "kubernetes"
        serverUrl: "https://kubernetes.default.svc.cluster.local"
        namespace: "${NAMESPACE:-jenkins}"
        jenkinsUrl: "http://jenkins.${NAMESPACE:-jenkins}.svc.cluster.local:8080"
        jenkinsTunnel: "jenkins-agent.${NAMESPACE:-jenkins}.svc.cluster.local:50000"
        connectTimeout: 5
        readTimeout: 15
        containerCapStr: "10"
        maxRequestsPerHostStr: "32"
        retentionTimeout: 5
        templates:
          - name: "jenkins-agent"
            namespace: "${NAMESPACE:-jenkins}"
            label: "jenkins-agent"
            nodeUsageMode: EXCLUSIVE
            containers:
              - name: "jnlp"
                image: "jenkins/inbound-agent:latest-jdk11"
                alwaysPullImage: false
                workingDir: "/home/jenkins/agent"
                ttyEnabled: true
                resourceRequestCpu: "500m"
                resourceRequestMemory: "512Mi"
                resourceLimitCpu: "1000m"
                resourceLimitMemory: "1Gi"
            idleMinutes: 0
            activeDeadlineSeconds: 180
            slaveConnectTimeout: 180

  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true

security:
  # Removed queueItemAuthenticator configuration that was causing issues

unclassified:
  location:
    url: "http://jenkins.local/"

  globalLibraries:
    libraries:
      - name: "shared-library"
        defaultVersion: "main"
        implicit: true
        allowVersionOverride: true
        includeInChangesets: true
        retriever:
          modernSCM:
            scm:
              git:
                remote: "file:///var/jenkins_home/shared-libraries/lib"
                credentialsId: "git-credentials"

credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              scope: GLOBAL
              id: "git-credentials"
              username: "git"
              password: "${GIT_PASSWORD:-password}"
              description: "Git credentials"
          - certificate:
              scope: GLOBAL
              id: "k8s-credentials"
              description: "Kubernetes credentials"
              keyStoreSource:
                kubernetes:
                  serviceAccountName: "jenkins"

jobs:
  - script: >
      folder('infrastructure') {
        displayName('Infrastructure')
        description('Infrastructure jobs')
      }
      
      folder('applications') {
        displayName('Applications')
        description('Application jobs')
      }
      
      pipelineJob('infrastructure/terraform-apply') {
        definition {
          cpsScm {
            scm {
              git {
                remote {
                  url('file:///var/jenkins_home/workspace/infra')
                }
                branch('*/main')
              }
            }
            scriptPath('Jenkinsfile')
          }
        }
      }
      
      pipelineJob('applications/flask-app') {
        definition {
          cpsScm {
            scm {
              git {
                remote {
                  url('file:///var/jenkins_home/workspace/apps/flask')
                }
                branch('*/main')
              }
            }
            scriptPath('Jenkinsfile')
          }
        }
      }
